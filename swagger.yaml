openapi: 3.0.0

servers:
  - url: "http://localhost:5000/api/v1"
  - url: "https://social-dc1i.onrender.com/api/v1"

info:
  title: Social App
  version: 1.0.0
  description: Chat App

tags:
  - name: Authentication
    description: Endpoints related to user authentication

  - name: Groups
    description: Endpoints related to group management

  - name: Personal
    description: Endpoint related to Personal message

paths:
  /health:
    get:
      summary: Get Hello Message
      description: Returns a greeting message.
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              example:
                message: Hello, God!

  /auth/login:
    post:
      summary: User Login
      description: Endpoint for user authentication.
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        "200":
          description: Successful login
          content:
            application/json:
              example:
                message: Login successful
                isError: false

        "401":
          description: Unauthorized
          content:
            application/json:
              example:
                message: Incorrect username or password

  /auth/register:
    post:
      summary: User Registration
      description: Endpoint for user registration.
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                email:
                  type: string
      responses:
        "201":
          description: User registered successfully
          content:
            application/json:
              example:
                message: Registration successful
        "400":
          description: Bad request
          content:
            application/json:
              example:
                message: Invalid request data

  /auth/authenticate:
    get:
      summary: Authenticate User
      description: Endpoint to check if the user is authenticated.
      tags:
        - Authentication
      security:
        - bearerAuth: []
      responses:
        "200":
          description: User is authenticated
          content:
            application/json:
              example:
                message: User is authenticated
                isError: false
        "401":
          description: Unauthorized
          content:
            application/json:
              example:
                message: User is not authenticated
                isError: true
  /personal:
    get:
      summary: Get all friends
      operationId: getAllFriends
      security:
        - bearerAuth: []
      tags:
        - Personal
      responses:
        "200":
          description: A list of friends
    post:
      summary: Send friend request
      operationId: sendFriendRequest
      security:
        - bearerAuth: []
      tags:
        - Personal
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                groupname:
                  type: string
                category:
                  type: string
      responses:
        "200":
          description: Friend request sent successfully
  /personal/users:
    get:
      summary: Get all users that are not friends
      operationId: getAllUsers
      security:
        - bearerAuth: []
      tags:
        - Personal
      responses:
        "200":
          description: A list of users

  /personal/accept/{requestId}:
    post:
      summary: Accept friend request
      operationId: acceptFriendRequest
      tags:
        - Personal
      parameters:
        - name: requestId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Friend request accepted successfully

  /personal/decline/{requestId}:
    delete:
      summary: Decline friend request
      operationId: declineFriendRequest
      tags:
        - Personal
      parameters:
        - name: requestId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Friend request declined successfully

  /personal/chat/{friendId}:
    put:
      summary: Send a message to a friend
      operationId: sendMessage
      tags:
        - Personal
      parameters:
        - name: friendId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Message sent successfully
    get:
      summary: Get personal messages with a friend
      operationId: getPersonalMessage
      tags:
        - Personal
      parameters:
        - name: friendId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: A list of personal messages with the friend

  /personal/remove/{friendId}:
    delete:
      summary: Remove friend
      tags:
        - Personal
      operationId: removeFriend
      parameters:
        - name: friendId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Friend removed successfully
  /group:
    get:
      summary: Get all groups
      operationId: getAllGroups
      tags:
        - Groups
      responses:
        "200":
          description: A list of groups
  /group/create:
    post:
      summary: Create a new group
      operationId: createGroup
      tags:
        - Groups
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_name:
                  type: string
                category:
                  type: string
      responses:
        "200":
          description: Group created successfully

  /group/{groupId}:
    get:
      summary: Get details of a single group
      operationId: getSingleGroup
      tags:
        - Groups
      parameters:
        - name: groupId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Details of the group

  /group/join/{groupId}:
    put:
      summary: Join a group
      operationId: joinGroup
      tags:
        - Groups
      parameters:
        - name: groupId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Joined the group successfully

  /group/remove/{groupId}:
    post:
      summary: Remove a member from a group
      operationId: removeMember
      tags:
        - Groups
      parameters:
        - name: groupId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
      responses:
        "200":
          description: Member removed from the group successfully

  /group/delete/{groupId}:
    post:
      summary: Delete a group
      operationId: deleteGroup
      tags:
        - Groups
      parameters:
        - name: groupId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Group deleted successfully

  /group/leave/{groupId}:
    post:
      summary: Leave a group
      operationId: leaveGroup
      tags:
        - Groups
      parameters:
        - name: groupId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Left the group successfully

  /group/chats/{groupId}:
    get:
      summary: Get messages from a group
      operationId: getGroupMessages
      tags:
        - Groups
      parameters:
        - name: groupId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: List of messages from the group
    put:
      summary: Send a message to a group
      operationId: sendGroupMessage
      tags:
        - Groups
      parameters:
        - name: groupId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
      responses:
        "200":
          description: Message sent to the group successfully
